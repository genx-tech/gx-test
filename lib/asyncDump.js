"use strict";

require("source-map-support/register");

const {
  createHook
} = require("async_hooks");

const {
  stackTraceFilter
} = require("mocha/lib/utils");

const fs = require("fs");

const allResources = new Map();
const filterStack = stackTraceFilter();
const hook = createHook({
  init(asyncId, type, triggerAsyncId) {
    allResources.set(asyncId, {
      type,
      triggerAsyncId,
      stack: new Error().stack
    });
  },

  destroy(asyncId) {
    allResources.delete(asyncId);
  }

}).enable();

global.asyncDump = module.exports = dumpFile => {
  hook.disable();
  const logs = [];
  allResources.forEach(value => {
    logs.push(`Type: ${value.type}`);
    logs.push(filterStack(value.stack));
    logs.push("\n");
  });
  fs.writeFileSync(dumpFile || "async-dump.log", logs.join("\n"));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hc3luY0R1bXAuanMiXSwibmFtZXMiOlsiY3JlYXRlSG9vayIsInJlcXVpcmUiLCJzdGFja1RyYWNlRmlsdGVyIiwiZnMiLCJhbGxSZXNvdXJjZXMiLCJNYXAiLCJmaWx0ZXJTdGFjayIsImhvb2siLCJpbml0IiwiYXN5bmNJZCIsInR5cGUiLCJ0cmlnZ2VyQXN5bmNJZCIsInNldCIsInN0YWNrIiwiRXJyb3IiLCJkZXN0cm95IiwiZGVsZXRlIiwiZW5hYmxlIiwiZ2xvYmFsIiwiYXN5bmNEdW1wIiwibW9kdWxlIiwiZXhwb3J0cyIsImR1bXBGaWxlIiwiZGlzYWJsZSIsImxvZ3MiLCJmb3JFYWNoIiwidmFsdWUiLCJwdXNoIiwid3JpdGVGaWxlU3luYyIsImpvaW4iXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQWlCQyxPQUFPLENBQUMsYUFBRCxDQUE5Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBdUJELE9BQU8sQ0FBQyxpQkFBRCxDQUFwQzs7QUFDQSxNQUFNRSxFQUFFLEdBQUdGLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLE1BQU1HLFlBQVksR0FBRyxJQUFJQyxHQUFKLEVBQXJCO0FBR0EsTUFBTUMsV0FBVyxHQUFHSixnQkFBZ0IsRUFBcEM7QUFFQSxNQUFNSyxJQUFJLEdBQUdQLFVBQVUsQ0FBQztBQUNwQlEsRUFBQUEsSUFBSSxDQUFDQyxPQUFELEVBQVVDLElBQVYsRUFBZ0JDLGNBQWhCLEVBQWdDO0FBQ2hDUCxJQUFBQSxZQUFZLENBQUNRLEdBQWIsQ0FBaUJILE9BQWpCLEVBQTBCO0FBQUVDLE1BQUFBLElBQUY7QUFBUUMsTUFBQUEsY0FBUjtBQUF3QkUsTUFBQUEsS0FBSyxFQUFFLElBQUlDLEtBQUosR0FBWUQ7QUFBM0MsS0FBMUI7QUFDSCxHQUhtQjs7QUFJcEJFLEVBQUFBLE9BQU8sQ0FBQ04sT0FBRCxFQUFVO0FBQ2JMLElBQUFBLFlBQVksQ0FBQ1ksTUFBYixDQUFvQlAsT0FBcEI7QUFDSDs7QUFObUIsQ0FBRCxDQUFWLENBT1ZRLE1BUFUsRUFBYjs7QUFTQUMsTUFBTSxDQUFDQyxTQUFQLEdBQW1CQyxNQUFNLENBQUNDLE9BQVAsR0FBa0JDLFFBQUQsSUFBYztBQUM5Q2YsRUFBQUEsSUFBSSxDQUFDZ0IsT0FBTDtBQUVBLFFBQU1DLElBQUksR0FBRyxFQUFiO0FBRUFwQixFQUFBQSxZQUFZLENBQUNxQixPQUFiLENBQXNCQyxLQUFELElBQVc7QUFDNUJGLElBQUFBLElBQUksQ0FBQ0csSUFBTCxDQUFXLFNBQVFELEtBQUssQ0FBQ2hCLElBQUssRUFBOUI7QUFDQWMsSUFBQUEsSUFBSSxDQUFDRyxJQUFMLENBQVVyQixXQUFXLENBQUNvQixLQUFLLENBQUNiLEtBQVAsQ0FBckI7QUFDQVcsSUFBQUEsSUFBSSxDQUFDRyxJQUFMLENBQVUsSUFBVjtBQUNILEdBSkQ7QUFNQXhCLEVBQUFBLEVBQUUsQ0FBQ3lCLGFBQUgsQ0FBaUJOLFFBQVEsSUFBSSxnQkFBN0IsRUFBK0NFLElBQUksQ0FBQ0ssSUFBTCxDQUFVLElBQVYsQ0FBL0M7QUFDSCxDQVpEIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHsgY3JlYXRlSG9vayB9ID0gcmVxdWlyZShcImFzeW5jX2hvb2tzXCIpO1xuY29uc3QgeyBzdGFja1RyYWNlRmlsdGVyIH0gPSByZXF1aXJlKFwibW9jaGEvbGliL3V0aWxzXCIpO1xuY29uc3QgZnMgPSByZXF1aXJlKFwiZnNcIik7XG5jb25zdCBhbGxSZXNvdXJjZXMgPSBuZXcgTWFwKCk7XG5cbi8vIHRoaXMgd2lsbCBwdWxsIE1vY2hhIGludGVybmFscyBvdXQgb2YgdGhlIHN0YWNrc1xuY29uc3QgZmlsdGVyU3RhY2sgPSBzdGFja1RyYWNlRmlsdGVyKCk7XG5cbmNvbnN0IGhvb2sgPSBjcmVhdGVIb29rKHtcbiAgICBpbml0KGFzeW5jSWQsIHR5cGUsIHRyaWdnZXJBc3luY0lkKSB7XG4gICAgICAgIGFsbFJlc291cmNlcy5zZXQoYXN5bmNJZCwgeyB0eXBlLCB0cmlnZ2VyQXN5bmNJZCwgc3RhY2s6IG5ldyBFcnJvcigpLnN0YWNrIH0pO1xuICAgIH0sXG4gICAgZGVzdHJveShhc3luY0lkKSB7XG4gICAgICAgIGFsbFJlc291cmNlcy5kZWxldGUoYXN5bmNJZCk7XG4gICAgfSxcbn0pLmVuYWJsZSgpO1xuXG5nbG9iYWwuYXN5bmNEdW1wID0gbW9kdWxlLmV4cG9ydHMgPSAoZHVtcEZpbGUpID0+IHtcbiAgICBob29rLmRpc2FibGUoKTtcblxuICAgIGNvbnN0IGxvZ3MgPSBbXTtcblxuICAgIGFsbFJlc291cmNlcy5mb3JFYWNoKCh2YWx1ZSkgPT4ge1xuICAgICAgICBsb2dzLnB1c2goYFR5cGU6ICR7dmFsdWUudHlwZX1gKTtcbiAgICAgICAgbG9ncy5wdXNoKGZpbHRlclN0YWNrKHZhbHVlLnN0YWNrKSk7XG4gICAgICAgIGxvZ3MucHVzaChcIlxcblwiKTtcbiAgICB9KTtcblxuICAgIGZzLndyaXRlRmlsZVN5bmMoZHVtcEZpbGUgfHwgXCJhc3luYy1kdW1wLmxvZ1wiLCBsb2dzLmpvaW4oXCJcXG5cIikpO1xufTtcbiJdfQ==