{"version":3,"sources":["../src/index.js"],"sourcesContent":["if (process.env.ASYNC_DUMP) {\n    require(\"./asyncDump\");\n}\n\nconst path = require(\"path\");\nconst { _ } = require(\"@genx/july\");\nconst { fs } = require(\"@genx/sys\");\nconst Suite = require(\"./Suite\");\n\nconst SPECJS = \".spec.js\";\nconst DOTJS = \".js\";\n\nconst TEST_OPTS = \"test.local.js\"; \n\n/**\n * Test body used to define test cases.\n * @callback testSuiteBody\n * @param {Suite} suite - The test suite object\n */\n\n/**\n * Create a test suite.\n * @param {string} [file] - The test spec file name, just use __filename.\n * @param {testSuiteBody} body - To define test cased in this callback.\n * @param {object} [options]\n * @property {function} options.before - Prepare work before all test cases.\n * @property {function} options.after - Cleanup work after all test cases.\n * @property {string} [options.serverEntry=\"../../src/index.js\"] - The entry file of @genx/server instance.\n * @property {boolean} options.verbose - Verbose mode.\n */\nfunction testSuite(file, body, options) {\n    if (typeof options === 'undefined') {        \n        if (typeof file !== 'string') {\n            if (typeof body !== 'undefined') {\n                // two arguments\n                options = body;\n            } \n\n            body = file;\n\n            const dbgGetCallerFile = require(\"@genx/july/lib/commonjs/lang/dbgGetCallerFile\");\n            file = dbgGetCallerFile();\n        }\n    }\n\n    const {\n        before: onBefore,\n        after: onAfter,\n        beforeEach: onBeforeEachCase,\n        afterEach: onAfterEachCase,\n        serverEntry,\n        verbose,\n        skip,\n        only,\n        testDir = 'test',\n    } = options == null ? {} : options;\n\n    const relPath = path.relative(path.resolve(process.cwd(), testDir), file);\n    const suiteName = relPath.substring(0, relPath.length-(file.endsWith(SPECJS) ? SPECJS : DOTJS).length);\n\n    const testOptsFile = path.resolve(testDir, TEST_OPTS);\n    let testOpts;\n\n    if (fs.existsSync(testOptsFile)) {\n        testOpts = require(testOptsFile);\n    }\n\n    const suiteOptions = {\n        serverEntry,\n        verbose,\n        testDir,\n        ...(testOpts ? _.pick(testOpts, [\"serverEntry\", \"verbose\"]) : null),\n    };\n\n    const suite = new Suite(suiteName, suiteOptions);\n\n    let opt;\n\n    if (only) {\n        opt = \"only\";\n    } else if (skip) {\n        opt = \"skip\";\n    } else if (testOpts) {\n        const only = new Set(testOpts.only);\n\n        if (only.has(suiteName)) {\n            opt = \"only\";\n        } else {\n            if (!_.isEmpty(testOpts.only)) {\n                console.log(`Suite \"${suiteName}\" skipped.`);\n                opt = \"skip\";\n            } else {\n                const skip = new Set(testOpts.skip);\n                if (skip.has(suiteName)) {\n                    opt = \"skip\";\n                    console.log(`Suite \"${suiteName}\" skipped.`);\n                }\n            }\n        }\n    }\n\n    (opt ? describe[opt] : describe)(suiteName, function () {\n        before(async () => {\n            suite.initAllure();\n\n            if (verbose) {\n                console.log(\"Starting suite:\", suiteName);\n            }\n\n            if (process.env.COVER_MODE) {\n                await suite.startWebServer_();\n            }\n\n            if (onBefore) {\n                await onBefore(suite);\n            }\n        });\n\n        after(async () => {\n            await suite.stopWebServerIfStarted_();\n\n            if (onAfter) {\n                await onAfter(suite);\n            }\n\n            console.log();\n            if (verbose) {\n                console.log(\"Finished suite:\", suiteName);\n            }\n\n            if (process.env.ASYNC_DUMP) {\n                asyncDump(process.env.ASYNC_DUMP.length > 1 ? process.env.ASYNC_DUMP : null);\n            }\n        });\n\n        if (onBeforeEachCase) {\n            beforeEach(() => onBeforeEachCase(suite));\n        }\n\n        if (onAfterEachCase) {\n            afterEach(() => onAfterEachCase(suite));\n        }\n\n        body(suite);\n    });\n}\n\nmodule.exports = testSuite;\n"],"names":["process","env","ASYNC_DUMP","require","path","_","fs","Suite","SPECJS","DOTJS","TEST_OPTS","testSuite","file","body","options","dbgGetCallerFile","before","onBefore","after","onAfter","beforeEach","onBeforeEachCase","afterEach","onAfterEachCase","serverEntry","verbose","skip","only","testDir","relPath","relative","resolve","cwd","suiteName","substring","length","endsWith","testOptsFile","testOpts","existsSync","suiteOptions","pick","suite","opt","Set","has","isEmpty","console","log","describe","initAllure","COVER_MODE","startWebServer_","stopWebServerIfStarted_","asyncDump","module","exports"],"mappings":"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"}