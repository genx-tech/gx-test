"use strict";

require("source-map-support/register");

const {
  get
} = require("@genx/july");

const tokenCache = {};

function defaultUserAuth(app, userTag) {
  return async client => {
    if (!userTag) {
      delete client.onSend;
      return client;
    }

    let token, userAuth;

    if (_.isPlainObject(userTag)) {
      token = tokenCache[userTag.userTag];
      userAuth = userTag;
    } else {
      token = tokenCache[userTag];
      userAuth = app.settings.userAuth[userTag];
    }

    if (!token) {
      let body = await client.post(userAuth.endpoint, {
        username: userAuth.username,
        password: userAuth.password
      });

      if (userAuth.tokenKey) {
        token = get(body, userAuth.tokenKey);
      } else {
        token = body.token;
      }

      tokenCache[userTag] = token;
      app.log("info", `Logged in with [${userTag}].`);
    }

    client.onSend = req => {
      req.set("Authorization", `Bearer ${token}`);
    };
  };
}

module.exports = defaultUserAuth;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kZWZhdWx0VXNlckF1dGguanMiXSwibmFtZXMiOlsiZ2V0IiwicmVxdWlyZSIsInRva2VuQ2FjaGUiLCJkZWZhdWx0VXNlckF1dGgiLCJhcHAiLCJ1c2VyVGFnIiwiY2xpZW50Iiwib25TZW5kIiwidG9rZW4iLCJ1c2VyQXV0aCIsIl8iLCJpc1BsYWluT2JqZWN0Iiwic2V0dGluZ3MiLCJib2R5IiwicG9zdCIsImVuZHBvaW50IiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInRva2VuS2V5IiwibG9nIiwicmVxIiwic2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFVQyxPQUFPLENBQUMsWUFBRCxDQUF2Qjs7QUFFQSxNQUFNQyxVQUFVLEdBQUcsRUFBbkI7O0FBRUEsU0FBU0MsZUFBVCxDQUF5QkMsR0FBekIsRUFBOEJDLE9BQTlCLEVBQXVDO0FBQ25DLFNBQU8sTUFBT0MsTUFBUCxJQUFrQjtBQUNyQixRQUFJLENBQUNELE9BQUwsRUFBYztBQUNWLGFBQU9DLE1BQU0sQ0FBQ0MsTUFBZDtBQUNBLGFBQU9ELE1BQVA7QUFDSDs7QUFFRCxRQUFJRSxLQUFKLEVBQVdDLFFBQVg7O0FBRUEsUUFBSUMsQ0FBQyxDQUFDQyxhQUFGLENBQWdCTixPQUFoQixDQUFKLEVBQThCO0FBQzFCRyxNQUFBQSxLQUFLLEdBQUdOLFVBQVUsQ0FBQ0csT0FBTyxDQUFDQSxPQUFULENBQWxCO0FBQ0FJLE1BQUFBLFFBQVEsR0FBR0osT0FBWDtBQUNILEtBSEQsTUFHTztBQUNIRyxNQUFBQSxLQUFLLEdBQUdOLFVBQVUsQ0FBQ0csT0FBRCxDQUFsQjtBQUNBSSxNQUFBQSxRQUFRLEdBQUdMLEdBQUcsQ0FBQ1EsUUFBSixDQUFhSCxRQUFiLENBQXNCSixPQUF0QixDQUFYO0FBQ0g7O0FBRUQsUUFBSSxDQUFDRyxLQUFMLEVBQVk7QUFDUixVQUFJSyxJQUFJLEdBQUcsTUFBTVAsTUFBTSxDQUFDUSxJQUFQLENBQVlMLFFBQVEsQ0FBQ00sUUFBckIsRUFBK0I7QUFDNUNDLFFBQUFBLFFBQVEsRUFBRVAsUUFBUSxDQUFDTyxRQUR5QjtBQUU1Q0MsUUFBQUEsUUFBUSxFQUFFUixRQUFRLENBQUNRO0FBRnlCLE9BQS9CLENBQWpCOztBQUlBLFVBQUlSLFFBQVEsQ0FBQ1MsUUFBYixFQUF1QjtBQUNuQlYsUUFBQUEsS0FBSyxHQUFHUixHQUFHLENBQUNhLElBQUQsRUFBT0osUUFBUSxDQUFDUyxRQUFoQixDQUFYO0FBQ0gsT0FGRCxNQUVPO0FBQ0hWLFFBQUFBLEtBQUssR0FBR0ssSUFBSSxDQUFDTCxLQUFiO0FBQ0g7O0FBQ0ROLE1BQUFBLFVBQVUsQ0FBQ0csT0FBRCxDQUFWLEdBQXNCRyxLQUF0QjtBQUVBSixNQUFBQSxHQUFHLENBQUNlLEdBQUosQ0FBUSxNQUFSLEVBQWlCLG1CQUFrQmQsT0FBUSxJQUEzQztBQUNIOztBQUVEQyxJQUFBQSxNQUFNLENBQUNDLE1BQVAsR0FBaUJhLEdBQUQsSUFBUztBQUNyQkEsTUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsZUFBUixFQUEwQixVQUFTYixLQUFNLEVBQXpDO0FBQ0gsS0FGRDtBQUdILEdBbENEO0FBbUNIOztBQUVEYyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixlQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZ2V0IH0gPSByZXF1aXJlKFwiQGdlbngvanVseVwiKTtcblxuY29uc3QgdG9rZW5DYWNoZSA9IHt9O1xuXG5mdW5jdGlvbiBkZWZhdWx0VXNlckF1dGgoYXBwLCB1c2VyVGFnKSB7XG4gICAgcmV0dXJuIGFzeW5jIChjbGllbnQpID0+IHtcbiAgICAgICAgaWYgKCF1c2VyVGFnKSB7XG4gICAgICAgICAgICBkZWxldGUgY2xpZW50Lm9uU2VuZDtcbiAgICAgICAgICAgIHJldHVybiBjbGllbnQ7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgdG9rZW4sIHVzZXJBdXRoO1xuXG4gICAgICAgIGlmIChfLmlzUGxhaW5PYmplY3QodXNlclRhZykpIHtcbiAgICAgICAgICAgIHRva2VuID0gdG9rZW5DYWNoZVt1c2VyVGFnLnVzZXJUYWddO1xuICAgICAgICAgICAgdXNlckF1dGggPSB1c2VyVGFnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdG9rZW4gPSB0b2tlbkNhY2hlW3VzZXJUYWddO1xuICAgICAgICAgICAgdXNlckF1dGggPSBhcHAuc2V0dGluZ3MudXNlckF1dGhbdXNlclRhZ107XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRva2VuKSB7XG4gICAgICAgICAgICBsZXQgYm9keSA9IGF3YWl0IGNsaWVudC5wb3N0KHVzZXJBdXRoLmVuZHBvaW50LCB7XG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJBdXRoLnVzZXJuYW1lLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiB1c2VyQXV0aC5wYXNzd29yZCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHVzZXJBdXRoLnRva2VuS2V5KSB7XG4gICAgICAgICAgICAgICAgdG9rZW4gPSBnZXQoYm9keSwgdXNlckF1dGgudG9rZW5LZXkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0b2tlbiA9IGJvZHkudG9rZW47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0b2tlbkNhY2hlW3VzZXJUYWddID0gdG9rZW47XG5cbiAgICAgICAgICAgIGFwcC5sb2coXCJpbmZvXCIsIGBMb2dnZWQgaW4gd2l0aCBbJHt1c2VyVGFnfV0uYCk7XG4gICAgICAgIH1cblxuICAgICAgICBjbGllbnQub25TZW5kID0gKHJlcSkgPT4ge1xuICAgICAgICAgICAgcmVxLnNldChcIkF1dGhvcml6YXRpb25cIiwgYEJlYXJlciAke3Rva2VufWApO1xuICAgICAgICB9O1xuICAgIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdFVzZXJBdXRoO1xuIl19